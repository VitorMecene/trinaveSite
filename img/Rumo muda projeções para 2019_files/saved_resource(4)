var sib_prefix = 'sib'; var sib_dateformat = 'dd-mm-yyyy';;
// Validate & submit process
(function($) {

    var dateFormat;
    if( $("input[name='hdn_new_format']").length )
    {
        dateFormat = sib_dateformat;
    }
    else {
        dateFormat = 'dd/mm/yyyy';
    }
    $('.tooltip').css({left: '101%'});

    // check if inputed sms value is valid
    function isValidSms(smsField, sms) {
        sms = sms.replace(/\b(0(?!\b))+/g, "");

        var tempSms = sms.replace(/( |\(|\)|\.|\-)/g, '');
        if (tempSms.length > 19 || tempSms.length < 6) {
            return false;
        }
        return true;
    }
    // check if inputed date value is valid
    function isValidDate(date) {
        var filter;
        if(dateFormat == 'dd/mm/yyyy')
        {
            filter = /^(((0[1-9]|[12]\d|3[01])\/(0[13578]|1[02])\/((19|[2-9]\d)\d{2}))|((0[1-9]|[12]\d|30)\/(0[13456789]|1[012])\/((19|[2-9]\d)\d{2}))|((0[1-9]|1\d|2[0-8])\/02\/((19|[2-9]\d)\d{2}))|(29\/02\/((1[6-9]|[2-9]\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00))))$/g;
        }

        if(dateFormat == 'dd-mm-yyyy')
        {
            filter = /^(((0[1-9]|[12]\d|3[01])-(0[13578]|1[02])-((19|[2-9]\d)\d{2}))|((0[1-9]|[12]\d|30)-(0[13456789]|1[012])-((19|[2-9]\d)\d{2}))|((0[1-9]|1\d|2[0-8])-02-((19|[2-9]\d)\d{2}))|(29-02-((1[6-9]|[2-9]\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00))))$/g;
        }
        else if(dateFormat == 'mm-dd-yyyy')
        {
            filter = /^(((0[13578]|1[02])-(0[1-9]|[12]\d|3[01])-((19|[2-9]\d)\d{2}))|((0[13456789]|1[012])-(0[1-9]|[12]\d|30)-((19|[2-9]\d)\d{2}))|(02-(0[1-9]|1\d|2[0-8])-((19|[2-9]\d)\d{2}))|(02-29-((1[6-9]|[2-9]\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00))))$/g;
        }

        if (filter.test(date)) {
            return true;
        }
        return false;
    }
    // allow to input digit and + only for sms
    function validateInteger(smsLength, evt) {
        var theEvent = evt || window.event;
        var key = theEvent.keyCode || theEvent.which;
        key = String.fromCharCode( key );

        // 0-9, +/-, space, brackets
        var regex = /[ +0-9()-]/;
        if( smsLength == 'date' ) {
            regex = /[ 0-9-]/;
            smsLength = 0;
        }
        if( !regex.test(key) || smsLength > 19 ) {
            theEvent.returnValue = false;
            key = theEvent.keyCode;
            // ignore input for del,tab, back, left, right, home and end key
            if(theEvent.preventDefault && key != 9 && key != 8 ) theEvent.preventDefault();
        }
    }

    $('#'+sib_prefix+'_embed_signup .'+sib_prefix+'-container').find('.hidden-btns').remove();
    $('#'+sib_prefix+'_embed_signup .'+sib_prefix+'-container').find('.message_area').remove();

    // add interest list ids for unsubscribe lists per interesting
    if( $('.sib_list_row').length && !$('input[name=interestLists]').length )
    {
        var interestList = '';
        $('.sib_list_row .sib_list').each(function(){
            interestList += '~' + $(this).data('listid');
        });
        jQuery('<input/>', {type: 'hidden', name: 'interestLists'}).val(interestList).appendTo('.sib_list_row')
    }

    $('#'+sib_prefix+'_embed_signup #theform').on('submit',function() {
        var theForm = $(this);
        if (theForm.hasClass(sib_prefix+'_processing')) {
            return false;
        }

        var wrapper = theForm.closest('.forms-builder-wrapper');

        wrapper.find('#'+sib_prefix+'_loading_gif_area').width(theForm.width()).height(theForm.height());

        var reqField = theForm.find('#req_hid').val();

        var primaryType = wrapper.find('#primary_type').val() == 'undefined' ? 'email' : wrapper.find('#primary_type').val();
        if(primaryType == 'email') {
            reqField = 'email' + reqField;
        }else{
            reqField = 'SMS' + reqField;
        }
        var required = reqField.split("~");
        var sendinblueFormLang = wrapper.find('#'+sib_prefix+'_embed_signup_lang').val();
        var emptyError = "Please complete this field.";
        var emailError = wrapper.find('#'+sib_prefix+'_embed_invalid_email_message').val();
        var smsError = 'The SMS field must contain between 6 and 19 digits.';
        var dateError = "Invalid date format";

        if (sendinblueFormLang == "fr") {
            emptyError = "Merci de remplir ce champ.";
            smsError = 'Le champ SMS doit contenir entre 6 et 19 chiffres.';
            dateError = "Date de format invalide";
        }
        else if (sendinblueFormLang == "es") {
            emptyError = "Por favor, complete este campo";
            smsError = 'El campo SMS debe contener entre 6 y 19 cifras.';
            dateError = "Formato de fecha no vÃ¡lido";
        }
        else if (sendinblueFormLang == "pt") {
            emptyError = "Preencha este campo.";
            smsError = 'O campo SMS deve conter entre 6 e 19 dÃ­gitos.';
            dateError = "O formato da data Ã© invÃ¡lido";
        }
        else if (sendinblueFormLang == "it") {
            emptyError = "Compilare questo campo.";
            smsError = 'Il campo SMS deve contenere dai 6 ai 19 caratteri.';
            dateError = "Il formato della data non Ã¨ valido";
        }
        else if (sendinblueFormLang == "de") {
            emptyError = "Bitte fÃ¼llen Sie dieses Feld aus.";
            smsError = 'Das SMS-Feld muss 6 bis 19 Ziffern enthalten.';
            dateError = "UngÃ¼ltiges Datumsformat";
        }

        theForm.find('div.alert').remove();
        theForm.find('.message_area').remove();

        for (i = 0; i < required.length; i++) {
            if ( required[i] == 'interestList' ) {
                if( $('.sib_list_row input:checkbox:checked').length == 0 ) {
                    $('.sib_list_row').addClass("needsfilled");
                    div_error = jQuery('<div/>', {class: 'message_area', style: 'background-color: #f2dede;border:1px solid #ebccd1; color: #a94442;margin-top: 5px;'});
                    div_error.prepend(emptyError);
                    jQuery(div_error).appendTo('.sib_list_row');
                }
            }else {
                var input = theForm.find('input[name="' + required[i] + '"]');

                var inputType = input.attr('type');
                if (inputType == 'text' || inputType == 'number') {
                    if (input.val() == "" || input.val() == emptyError) {
                        input.closest('.row').addClass("needsfilled");
                        div_error = jQuery('<div/>', {class: 'message_area', style: 'background-color: #f2dede;border:1px solid #ebccd1; color: #a94442;margin-top: 5px;'});
                        div_error.prepend(emptyError);
                        jQuery(div_error).appendTo(input.closest('.row'));
                    }
                    else {
                        if (required[i] == 'email') {
                            if (!/^([a-zA-Z0-9_.+-])+\@(([a-zA-Z0-9-])+\.)+([a-zA-Z0-9]{2,4})+$/.test(input.val())) {
                                input.closest('.row').addClass("needsfilled");
                                div_error = jQuery('<div/>', {class: 'message_area', style: 'background-color: #f2dede;border:1px solid #ebccd1; color: #a94442;margin-top: 5px;'});
                                div_error.prepend(emailError);
                                jQuery(div_error).appendTo(input.closest('.row'));
                                input.val('');
                            } else {
                                input.closest('.row').removeClass("needsfilled");
                            }
                        }
                        else if (required[i] == 'SMS') {
                            if ($('#sms_prefix').length && $('#sms_prefix').val() == '') {
                                input.closest('.row').addClass("needsfilled");
                                div_error = jQuery('<div/>', {class: 'message_area', style: 'background-color: #f2dede;border:1px solid #ebccd1; color: #a94442;margin-top: 5px;'});
                                div_error.prepend(emptyError);
                                jQuery(div_error).appendTo(input.closest('.row'));
                            }
                            else {
                                input.closest('.row').removeClass("needsfilled");
                            }
                        }
                        else {
                            input.closest('.row').removeClass("needsfilled");
                        }
                    }
                }
                else if (inputType == 'radio') {
                    if (input.is(':checked') == false) {
                        input.closest('.row').addClass("needsfilled");
                        div_error = jQuery('<div/>', {class: 'message_area', style: 'background-color: #f2dede;border:1px solid #ebccd1; color: #a94442;margin-top: 5px;'});
                        div_error.prepend(emptyError);
                        jQuery(div_error).appendTo(input.closest('.row'));
                    }
                } else if (required[i] == 'Captcha' && typeof grecaptcha != 'undefined') {
                    var captchaResponse = grecaptcha.getResponse();
                    if (captchaResponse.length == 0) {
                        $(".captcha > div.row").addClass("needsfilled");
                        div_error = jQuery('<div/>', {class: 'message_area', style: 'background-color: #f2dede;border:1px solid #ebccd1; color: #a94442;margin-top: 5px;'});
                        div_error.prepend(emptyError);
                        jQuery(div_error).appendTo(".captcha > div.row");

                    } else {
                        $(".captcha > div.row").removeClass("needsfilled");
                    }
                } else {
                    var fields = input.serializeArray();
                    if (fields.length == 0) {
                        input.closest('.row').addClass("needsfilled");
                    }
                    else {
                        input.closest('.row').removeClass("needsfilled");
                    }
                }
            }
        }
        $(".row").each(function(){
            var spanElement = $(this).find('span');
            var ele = $(this).find("input");
            var alertWidth = ele.width() + 10;
            var smsPrefix = ($(this).find('#sms_prefix').length > 0 ) ? $(this).find('#sms_prefix').val() : '';

            if ( $(this).find('input[name=SMS]').length > 0 ) {
                var ele_sms = $(this).find('input[name=SMS]');
                if (!isValidSms(ele_sms, smsPrefix + ele_sms.val()) && ele_sms.val() != "") {
                    ele_sms.closest('.row').addClass("needsfilled");
                    div_error = jQuery('<div/>', {class: 'message_area', style: 'background-color: #f2dede;border:1px solid #ebccd1; color: #a94442;margin-top: 5px;width:' + alertWidth + ';'});
                    div_error.prepend(smsError);
                    jQuery(div_error).appendTo(ele_sms.closest('.row'));
                    ele_sms.val('');
                }
            }
            if(spanElement.text() == dateFormat){
                if (!isValidDate(ele.val()) && ele.val() != ""){
                    ele.closest('.row').addClass("needsfilled");
                    div_error = jQuery('<div/>', {class: 'message_area', style: 'background-color: #f2dede;border:1px solid #ebccd1; color: #a94442;margin-top: 5px;width:' + alertWidth + ';'});
                    div_error.prepend(dateError);
                    jQuery(div_error).appendTo(ele.closest('.row'));
                    ele.val('');
                }
            }
        });
        $('div.message_area button.close').on('click', function() {
            $(this).parent().remove();
        });

        if (theForm.find('input').closest('.row').hasClass("needsfilled") || $(".captcha > div.row").hasClass("needsfilled")) {
            return false;
        }else{
            // submit ajax process --> coding here
            var requestUrl = theForm.attr('action');
            var postData = theForm.serialize();
            theForm.addClass(sib_prefix+'_processing');
            theForm.parent().find('#'+sib_prefix+'_loading_gif_area').show();
            theForm.css('opacity', '0.5');
            $.ajax({
                url:requestUrl,
                data : postData,
                dataType:'json',
                type:'POST',
                beforeSend:function(){ },
                success:function(data){
                    var theForm = $('.'+sib_prefix+'_processing');

                    theForm.parent().find('#'+sib_prefix+'_loading_gif_area').hide();
                    theForm.css('opacity', '1');
                    if (data.result != undefined) {
                        if ((data.result.result == 'success') || (data.result.result == 'emailExist') || (data.result.result == 'OK') || (data.result.result == 'OK_UPDATE')) {
                            color = '#3c763d';
                            var datacookie = new Date();
                            datacookie.setTime(+ datacookie + 86400000);
                            var emailvalue = theForm.find('#email').val();
                            document.cookie = "abril_central_email=" + emailvalue + "; expires="+ datacookie.toGMTString() + "; path=/; domain=abril.com.br";
                            theForm[0].reset();
                            theForm.find('input:radio').prop('checked', false);
                        }
                        else {
                            color = '#a94442';
                        }

                        var messageHtml = jQuery('<div/>', {class: 'message_area', style: 'color: ' + color + ';'});
                        if (data.result.result == 'success' || data.result.result == 'OK') {
                            $('.widget-newsletter-subtitle').text("Inscrição efetuada com sucesso!");
                            $('.widget-newsletter-text').text("A partir de agora você receberá a nossa newsletter principal. Lembre-se de sempre checar sua caixa de spam.");
                            $('.widget-newsletter-form-row.checkbox-text, .newsletter-widget-email-container, .newsletter-widget-button-container, .sib-container, .message_area').hide();
                            $('.widget-newsletter-button-box').show();

                            if (data.result.smsExist != ''){
                                var smsMSG = '';
                                var smsNumber = data.result.smsExist;
                                smsMSG = data.result.smsExist_msg.split('[number]');

                                messageHtml += '. '+smsMSG[0]+smsNumber+smsMSG[1];
                            }

                            if (data.result.url_redirect != '') {
                                location.href = data.result.url_redirect;
                            }
                        }
                        else if(data.result.result == 'sms_emailExist') {
                            var emailMSG = '';
                            var emailAddress = data.result.emailExist;
                            emailMSG = data.result.emailExist_msg.split('[address]');

                            messageHtml += '. '+emailMSG[0]+emailAddress+emailMSG[1];
                        }
                        else if(data.result.result == 'invalid_request' || data.result.result == 'invalidEmail') {
                            messageHtml.prepend(data.result.invalid_err_msg);
                        }
                        else if(data.result.result == 'invalidSms') {
                            messageHtml.prepend(data.result.invalidSms_msg);
                        }
                        else if(data.result.result == 'emailExist' || data.result.result == 'OK_UPDATE') {
                            messageHtml.prepend(data.result.exist_err_msg);
                            if (data.result.smsExist != ''){
                                var smsMSG = '';
                                var smsNumber = data.result.smsExist;
                                smsMSG = data.result.smsExist_msg.split('[number]');

                                messageHtml += '. '+smsMSG[0]+smsNumber+smsMSG[1];
                            }
                            if (data.result.url_redirect != '') {
                                location.href = data.result.url_redirect;
                            }
                        }
                        else if(data.result.result == 'dateFormat' || data.result.result == 'reqMiss' ) {
                            messageHtml.prepend(data.result.general_err_msg);
                        } else if(data.result.result == 'invalidCaptcha') {
                          messageHtml.prepend(data.result.general_err_msg);
                        }
                        theForm.find('.'+sib_prefix+'-container').prepend(messageHtml);
                        $('div.message_area button.close').on('click', function() {
                            $(this).parent().remove();
                        });
                        theForm.removeClass(sib_prefix+'_processing');
                    }
                }
            });
        }
        return false;
    });

    $('#'+sib_prefix+'_embed_signup :input').on('click',function() {
        if ($(this).closest('.row').hasClass("needsfilled") ) {
            $(this).closest('.row').find('div.message_area').remove();
            $(this).val("");
            if($(this).attr('type') == 'radio')
                $(this).val("1");
            $(this).closest('.row').removeClass("needsfilled");
        }
    });

    $('#'+sib_prefix+'_embed_signup input[type=radio]').on('click',function(){
        if ($(this).closest('.row').hasClass("needsfilled") ) {
            $(this).attr('checked', true);
            $(this).closest('.row').find('div.message_area').remove();
            $(this).closest('.row').removeClass("needsfilled");
        }
    });

    // allow to input 0-9 and - only for date field
    $("input").on('keypress', function(event) {
        if($(this).closest(".row").find("." + sib_prefix + "_dateformat").length > 0){
            validateInteger('date', event);
        }
    });

    $("#SMS").on('keypress', function (event){
        var length = $(this).val().length;
        validateInteger(length, event);
    });

    $("input[type=number]").on('keypress', function(event) {
        var theEvent = event || window.event;
        var key = theEvent.keyCode || theEvent.which;
        key = String.fromCharCode( key );

        // 0-9, +/-, space, brackets
        var regex = /[0-9]/;

        if( !regex.test(key)) {
            theEvent.returnValue = false;
            key = theEvent.keyCode;
            // ignore input for del,tab, back, left, right, home and end key
            if(theEvent.preventDefault && key != 9 && key != 8 ) theEvent.preventDefault();
            var eleRow = $(this).closest('.row');
            var frmLang = eleRow.closest('.forms-builder-wrapper').find('#'+sib_prefix+'_embed_signup_lang').val();
            var numberError = "Please enter a number.";
            if (frmLang == "fr") {
                numberError = "Veuillez entrer un nombre.";
            }
            else if (frmLang == "es") {
                numberError = "Please enter a number.";
            }
            else if (frmLang == "pt") {
                numberError = "Please enter a number.";
            }
            else if (frmLang == "it") {
                numberError = "Please enter a number.";
            }
            else if (frmLang == "de") {
                numberError = "Please enter a number.";
            }
            if( !eleRow.find('.message_area').length)
            {
                div_error = jQuery('<div/>', {class: 'message_area', style: 'background-color: #f2dede;border:1px solid #ebccd1; color: #a94442;'});
                div_error.prepend(numberError);
                jQuery(div_error).appendTo(eleRow);
            }
        }
    });

    $(document).on('click', '.message_area .close', function() {
        $(this).closest('.message_area').remove();
    });

    $(document).on('click', '.sib-dropdown-toggle.country-flg', function() {
        $(".country-block ul").toggle();
    });

    $(document).on( 'click', '.country-block ul li a' ,function() {
        var code = $(this).data('code');
        var cCode = $(this).data('c_code');
        $('.sib-dropdown-toggle .cflags').attr('class','cflags');
        $('.sib-dropdown-toggle .cflags').addClass(cCode);

        // update country prefix
        $('#sms_prefix').val('+' + code);

        $(".country-block ul").hide();
    });

    $(document).bind('click', function(e) {
        var $clicked = $(e.target);
        if (! $clicked.parents().hasClass("country-block"))
            $(".country-block ul").hide();
    });

    if( $('.sms_field .country-block').length )
    {
        var cflagsClasses = $('.sib-dropdown-toggle .cflags').attr('class').split(' ');
        if(cflagsClasses[1] && cflagsClasses[1] != '')
        {
            var countryCode = $('.sib-dropdown-menu').find('[data-c_code="' + cflagsClasses[1] + '"]').data('code');
            // update country prefix
            $('#sms_prefix').val('+' + countryCode);
        }
        else {
            $('.sib-dropdown-toggle .cflags').addClass('FR');
            var countryCode = $('.sib-dropdown-menu').find('[data-c_code="FR"]').data('code');
            // update country prefix
            $('#sms_prefix').val('+' + countryCode);
        }
    }
    // set last submit to avoid refresh post
    $("#hdn_email_txt").val(new Date().getTime());

    // gCaptcha responsive
    function rescale_gCaptcha(){
        var width = $('#theform').find('#gcaptcha').parent().width();
        if (width < 350) {
            var scale = width / 350;
            $('#gcaptcha').css('transform', 'scale(' + scale + ')');
            $('#gcaptcha').css('-webkit-transform', 'scale(' + scale + ')');
            $('#gcaptcha').css('transform-origin', '0 0');
            $('#gcaptcha').css('-webkit-transform-origin', '0 0');
        }
    }
    rescale_gCaptcha();
    $(window).on('resize', function(){
        rescale_gCaptcha();
    });

    $('#gcaptcha').css('margin-left', '0px');
}(jQuery));
;
/* Detect-zoom
 * -----------
 * Cross Browser Zoom and Pixel Ratio Detector
 * Version 1.0.4 | Apr 1 2013
 * dual-licensed under the WTFPL and MIT license
 * Maintained by https://github/tombigel
 * Original developer https://github.com/yonran
 */

//AMD and CommonJS initialization copied from https://github.com/zohararad/audio5js
(function (root, ns, factory) {
    "use strict";

    if (typeof (module) !== 'undefined' && module.exports) { // CommonJS
        module.exports = factory(ns, root);
    } else if (typeof (define) === 'function' && define.amd) { // AMD
        define("factory", function () {
            return factory(ns, root);
        });
    } else {
        root[ns] = factory(ns, root);
    }

}(window, 'detectZoom', function () {

    /**
     * Use devicePixelRatio if supported by the browser
     * @return {Number}
     * @private
     */
    var devicePixelRatio = function () {
        return window.devicePixelRatio || 1;
    };

    /**
     * Fallback function to set default values
     * @return {Object}
     * @private
     */
    var fallback = function () {
        return {
            zoom: 1,
            devicePxPerCssPx: 1
        };
    };
    /**
     * IE 8 and 9: no trick needed!
     * TODO: Test on IE10 and Windows 8 RT
     * @return {Object}
     * @private
     **/
    var ie8 = function () {
        var zoom = Math.round((screen.deviceXDPI / screen.logicalXDPI) * 100) / 100;
        return {
            zoom: zoom,
            devicePxPerCssPx: zoom * devicePixelRatio()
        };
    };

    /**
     * For IE10 we need to change our technique again...
     * thanks https://github.com/stefanvanburen
     * @return {Object}
     * @private
     */
    var ie10 = function () {
        var zoom = Math.round((document.documentElement.offsetHeight / window.innerHeight) * 100) / 100;
        return {
            zoom: zoom,
            devicePxPerCssPx: zoom * devicePixelRatio()
        };
    };

    /**
     * Mobile WebKit
     * the trick: window.innerWIdth is in CSS pixels, while
     * screen.width and screen.height are in system pixels.
     * And there are no scrollbars to mess up the measurement.
     * @return {Object}
     * @private
     */
    var webkitMobile = function () {
        var deviceWidth = (Math.abs(window.orientation) == 90) ? screen.height : screen.width;
        var zoom = deviceWidth / window.innerWidth;
        return {
            zoom: zoom,
            devicePxPerCssPx: zoom * devicePixelRatio()
        };
    };

    /**
     * Desktop Webkit
     * the trick: an element's clientHeight is in CSS pixels, while you can
     * set its line-height in system pixels using font-size and
     * -webkit-text-size-adjust:none.
     * device-pixel-ratio: http://www.webkit.org/blog/55/high-dpi-web-sites/
     *
     * Previous trick (used before http://trac.webkit.org/changeset/100847):
     * documentElement.scrollWidth is in CSS pixels, while
     * document.width was in system pixels. Note that this is the
     * layout width of the document, which is slightly different from viewport
     * because document width does not include scrollbars and might be wider
     * due to big elements.
     * @return {Object}
     * @private
     */
    var webkit = function () {
        var important = function (str) {
            return str.replace(/;/g, " !important;");
        };

        var div = document.createElement('div');
        div.innerHTML = "1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>0";
        div.setAttribute('style', important('font: 100px/1em sans-serif; -webkit-text-size-adjust: none; text-size-adjust: none; height: auto; width: 1em; padding: 0; overflow: visible;'));

        // The container exists so that the div will be laid out in its own flow
        // while not impacting the layout, viewport size, or display of the
        // webpage as a whole.
        // Add !important and relevant CSS rule resets
        // so that other rules cannot affect the results.
        var container = document.createElement('div');
        container.setAttribute('style', important('width:0; height:0; overflow:hidden; visibility:hidden; position: absolute;'));
        container.appendChild(div);

        document.body.appendChild(container);
        var zoom = 1000 / div.clientHeight;
        zoom = Math.round(zoom * 100) / 100;
        document.body.removeChild(container);

        return{
            zoom: zoom,
            devicePxPerCssPx: zoom * devicePixelRatio()
        };
    };

    /**
     * no real trick; device-pixel-ratio is the ratio of device dpi / css dpi.
     * (Note that this is a different interpretation than Webkit's device
     * pixel ratio, which is the ratio device dpi / system dpi).
     *
     * Also, for Mozilla, there is no difference between the zoom factor and the device ratio.
     *
     * @return {Object}
     * @private
     */
    var firefox4 = function () {
        var zoom = mediaQueryBinarySearch('min--moz-device-pixel-ratio', '', 0, 10, 20, 0.0001);
        zoom = Math.round(zoom * 100) / 100;
        return {
            zoom: zoom,
            devicePxPerCssPx: zoom
        };
    };

    /**
     * Firefox 18.x
     * Mozilla added support for devicePixelRatio to Firefox 18,
     * but it is affected by the zoom level, so, like in older
     * Firefox we can't tell if we are in zoom mode or in a device
     * with a different pixel ratio
     * @return {Object}
     * @private
     */
    var firefox18 = function () {
        return {
            zoom: firefox4().zoom,
            devicePxPerCssPx: devicePixelRatio()
        };
    };

    /**
     * works starting Opera 11.11
     * the trick: outerWidth is the viewport width including scrollbars in
     * system px, while innerWidth is the viewport width including scrollbars
     * in CSS px
     * @return {Object}
     * @private
     */
    var opera11 = function () {
        var zoom = window.top.outerWidth / window.top.innerWidth;
        zoom = Math.round(zoom * 100) / 100;
        return {
            zoom: zoom,
            devicePxPerCssPx: zoom * devicePixelRatio()
        };
    };

    /**
     * Use a binary search through media queries to find zoom level in Firefox
     * @param property
     * @param unit
     * @param a
     * @param b
     * @param maxIter
     * @param epsilon
     * @return {Number}
     */
    var mediaQueryBinarySearch = function (property, unit, a, b, maxIter, epsilon) {
        var matchMedia;
        var head, style, div;
        if (window.matchMedia) {
            matchMedia = window.matchMedia;
        } else {
            head = document.getElementsByTagName('head')[0];
            style = document.createElement('style');
            head.appendChild(style);

            div = document.createElement('div');
            div.className = 'mediaQueryBinarySearch';
            div.style.display = 'none';
            document.body.appendChild(div);

            matchMedia = function (query) {
                style.sheet.insertRule('@media ' + query + '{.mediaQueryBinarySearch ' + '{text-decoration: underline} }', 0);
                var matched = getComputedStyle(div, null).textDecoration == 'underline';
                style.sheet.deleteRule(0);
                return {matches: matched};
            };
        }
        var ratio = binarySearch(a, b, maxIter);
        if (div) {
            head.removeChild(style);
            document.body.removeChild(div);
        }
        return ratio;

        function binarySearch(a, b, maxIter) {
            var mid = (a + b) / 2;
            if (maxIter <= 0 || b - a < epsilon) {
                return mid;
            }
            var query = "(" + property + ":" + mid + unit + ")";
            if (matchMedia(query).matches) {
                return binarySearch(mid, b, maxIter - 1);
            } else {
                return binarySearch(a, mid, maxIter - 1);
            }
        }
    };

    /**
     * Generate detection function
     * @private
     */
    var detectFunction = (function () {
        var func = fallback;
        //IE8+
        if (!isNaN(screen.logicalXDPI) && !isNaN(screen.systemXDPI)) {
            func = ie8;
        }
        // IE10+ / Touch
        else if (window.navigator.msMaxTouchPoints) {
            func = ie10;
        }
        //Mobile Webkit
        else if ('orientation' in window && typeof document.body.style.webkitMarquee === 'string') {
            func = webkitMobile;
        }
        //WebKit
        else if (typeof document.body.style.webkitMarquee === 'string') {
            func = webkit;
        }
        //Opera
        else if (navigator.userAgent.indexOf('Opera') >= 0) {
            func = opera11;
        }
        //Last one is Firefox
        //FF 18.x
        else if (window.devicePixelRatio) {
            func = firefox18;
        }
        //FF 4.0 - 17.x
        else if (firefox4().zoom > 0.001) {
            func = firefox4;
        }

        return func;
    }());


    return ({

        /**
         * Ratios.zoom shorthand
         * @return {Number} Zoom level
         */
        zoom: function () {
            return detectFunction().zoom;
        },

        /**
         * Ratios.devicePxPerCssPx shorthand
         * @return {Number} devicePxPerCssPx level
         */
        device: function () {
            return detectFunction().devicePxPerCssPx;
        }
    });
}));

var wpcom_img_zoomer = {
        clientHintSupport: {
                gravatar: false,
                files: false,
                photon: false,
                mshots: false,
                staticAssets: false,
                latex: false,
                imgpress: false,
        },
	useHints: false,
	zoomed: false,
	timer: null,
	interval: 1000, // zoom polling interval in millisecond

	// Should we apply width/height attributes to control the image size?
	imgNeedsSizeAtts: function( img ) {
		// Do not overwrite existing width/height attributes.
		if ( img.getAttribute('width') !== null || img.getAttribute('height') !== null )
			return false;
		// Do not apply the attributes if the image is already constrained by a parent element.
		if ( img.width < img.naturalWidth || img.height < img.naturalHeight )
			return false;
		return true;
	},

        hintsFor: function( service ) {
                if ( this.useHints === false ) {
                        return false;
                }
                if ( this.hints() === false ) {
                        return false;
                }
                if ( typeof this.clientHintSupport[service] === "undefined" ) {
                        return false;
                }
                if ( this.clientHintSupport[service] === true ) {
                        return true;
                }
                return false;
        },

	hints: function() {
		try {
			var chrome = window.navigator.userAgent.match(/\sChrome\/([0-9]+)\.[.0-9]+\s/)
			if (chrome !== null) {
				var version = parseInt(chrome[1], 10)
				if (isNaN(version) === false && version >= 46) {
					return true
				}
			}
		} catch (e) {
			return false
		}
		return false
	},

	init: function() {
		var t = this;
		try{
			t.zoomImages();
			t.timer = setInterval( function() { t.zoomImages(); }, t.interval );
		}
		catch(e){
		}
	},

	stop: function() {
		if ( this.timer )
			clearInterval( this.timer );
	},

	getScale: function() {
		var scale = detectZoom.device();
		// Round up to 1.5 or the next integer below the cap.
		if      ( scale <= 1.0 ) scale = 1.0;
		else if ( scale <= 1.5 ) scale = 1.5;
		else if ( scale <= 2.0 ) scale = 2.0;
		else if ( scale <= 3.0 ) scale = 3.0;
		else if ( scale <= 4.0 ) scale = 4.0;
		else                     scale = 5.0;
		return scale;
	},

	shouldZoom: function( scale ) {
		var t = this;
		// Do not operate on hidden frames.
		if ( "innerWidth" in window && !window.innerWidth )
			return false;
		// Don't do anything until scale > 1
		if ( scale == 1.0 && t.zoomed == false )
			return false;
		return true;
	},

	zoomImages: function() {
		var t = this;
		var scale = t.getScale();
		if ( ! t.shouldZoom( scale ) ){
			return;
		}
		t.zoomed = true;
		// Loop through all the <img> elements on the page.
		var imgs = document.getElementsByTagName("img");

		for ( var i = 0; i < imgs.length; i++ ) {
			// Wait for original images to load
			if ( "complete" in imgs[i] && ! imgs[i].complete )
				continue;

			// Skip images that have srcset attributes.
			if ( imgs[i].hasAttribute('srcset') ) {
				continue;
			}

			// Skip images that don't need processing.
			var imgScale = imgs[i].getAttribute("scale");
			if ( imgScale == scale || imgScale == "0" )
				continue;

			// Skip images that have already failed at this scale
			var scaleFail = imgs[i].getAttribute("scale-fail");
			if ( scaleFail && scaleFail <= scale )
				continue;

			// Skip images that have no dimensions yet.
			if ( ! ( imgs[i].width && imgs[i].height ) )
				continue;

			// Skip images from Lazy Load plugins
			if ( ! imgScale && imgs[i].getAttribute("data-lazy-src") && (imgs[i].getAttribute("data-lazy-src") !== imgs[i].getAttribute("src")))
				continue;

			if ( t.scaleImage( imgs[i], scale ) ) {
				// Mark the img as having been processed at this scale.
				imgs[i].setAttribute("scale", scale);
			}
			else {
				// Set the flag to skip this image.
				imgs[i].setAttribute("scale", "0");
			}
		}
	},

	scaleImage: function( img, scale ) {
		var t = this;
		var newSrc = img.src;

                var isFiles = false;
                var isLatex = false;
                var isPhoton = false;

		// Skip slideshow images
		if ( img.parentNode.className.match(/slideshow-slide/) )
			return false;

		// Scale gravatars that have ?s= or ?size=
		if ( img.src.match( /^https?:\/\/([^\/]*\.)?gravatar\.com\/.+[?&](s|size)=/ ) ) {
                        if ( this.hintsFor( "gravatar" ) === true ) {
                                return false;
                        }
			newSrc = img.src.replace( /([?&](s|size)=)(\d+)/, function( $0, $1, $2, $3 ) {
				// Stash the original size
				var originalAtt = "originals",
				originalSize = img.getAttribute(originalAtt);
				if ( originalSize === null ) {
					originalSize = $3;
					img.setAttribute(originalAtt, originalSize);
					if ( t.imgNeedsSizeAtts( img ) ) {
						// Fix width and height attributes to rendered dimensions.
						img.width = img.width;
						img.height = img.height;
					}
				}
				// Get the width/height of the image in CSS pixels
				var size = img.clientWidth;
				// Convert CSS pixels to device pixels
				var targetSize = Math.ceil(img.clientWidth * scale);
				// Don't go smaller than the original size
				targetSize = Math.max( targetSize, originalSize );
				// Don't go larger than the service supports
				targetSize = Math.min( targetSize, 512 );
				return $1 + targetSize;
			});
		}

		// Scale mshots that have width
		else if ( img.src.match(/^https?:\/\/([^\/]+\.)*(wordpress|wp)\.com\/mshots\/.+[?&]w=\d+/) ) {
                        if ( this.hintsFor( "mshots" ) === true ) {
                                return false;
                        }
			newSrc = img.src.replace( /([?&]w=)(\d+)/, function($0, $1, $2) {
				// Stash the original size
				var originalAtt = 'originalw', originalSize = img.getAttribute(originalAtt);
				if ( originalSize === null ) {
					originalSize = $2;
					img.setAttribute(originalAtt, originalSize);
					if ( t.imgNeedsSizeAtts( img ) ) {
						// Fix width and height attributes to rendered dimensions.
						img.width = img.width;
						img.height = img.height;
					}
				}
				// Get the width of the image in CSS pixels
				var size = img.clientWidth;
				// Convert CSS pixels to device pixels
				var targetSize = Math.ceil(size * scale);
				// Don't go smaller than the original size
				targetSize = Math.max( targetSize, originalSize );
				// Don't go bigger unless the current one is actually lacking
				if ( scale > img.getAttribute("scale") && targetSize <= img.naturalWidth )
					targetSize = $2;
				if ( $2 != targetSize )
					return $1 + targetSize;
				return $0;
			});

			// Update height attribute to match width
			newSrc = newSrc.replace( /([?&]h=)(\d+)/, function($0, $1, $2) {
				if ( newSrc == img.src ) {
					return $0;
				}
				// Stash the original size
				var originalAtt = 'originalh', originalSize = img.getAttribute(originalAtt);
				if ( originalSize === null ) {
					originalSize = $2;
					img.setAttribute(originalAtt, originalSize);
				}
				// Get the height of the image in CSS pixels
				var size = img.clientHeight;
				// Convert CSS pixels to device pixels
				var targetSize = Math.ceil(size * scale);
				// Don't go smaller than the original size
				targetSize = Math.max( targetSize, originalSize );
				// Don't go bigger unless the current one is actually lacking
				if ( scale > img.getAttribute("scale") && targetSize <= img.naturalHeight )
					targetSize = $2;
				if ( $2 != targetSize )
					return $1 + targetSize;
				return $0;
			});
		}

		// Scale simple imgpress queries (s0.wp.com) that only specify w/h/fit
		else if ( img.src.match(/^https?:\/\/([^\/.]+\.)*(wp|wordpress)\.com\/imgpress\?(.+)/) ) {
                        if ( this.hintsFor( "imgpress" ) === true ) {
                                return false; 
                        }
			var imgpressSafeFunctions = ["zoom", "url", "h", "w", "fit", "filter", "brightness", "contrast", "colorize", "smooth", "unsharpmask"];
			// Search the query string for unsupported functions.
			var qs = RegExp.$3.split('&');
			for ( var q in qs ) {
				q = qs[q].split('=')[0];
				if ( imgpressSafeFunctions.indexOf(q) == -1 ) {
					return false;
				}
			}
			// Fix width and height attributes to rendered dimensions.
			img.width = img.width;
			img.height = img.height;
			// Compute new src
			if ( scale == 1 )
				newSrc = img.src.replace(/\?(zoom=[^&]+&)?/, '?');
			else
				newSrc = img.src.replace(/\?(zoom=[^&]+&)?/, '?zoom=' + scale + '&');
		}

		// Scale files.wordpress.com, LaTeX, or Photon images (i#.wp.com)
		else if (
			( isFiles = img.src.match(/^https?:\/\/([^\/]+)\.files\.wordpress\.com\/.+[?&][wh]=/) ) ||
			( isLatex = img.src.match(/^https?:\/\/([^\/.]+\.)*(wp|wordpress)\.com\/latex\.php\?(latex|zoom)=(.+)/) ) ||
			( isPhoton = img.src.match(/^https?:\/\/i[\d]{1}\.wp\.com\/(.+)/) )
		) {
                        if ( false !== isFiles && this.hintsFor( "files" ) === true ) {
                                return false
                        }
                        if ( false !== isLatex && this.hintsFor( "latex" ) === true ) {
                                return false
                        }
                        if ( false !== isPhoton && this.hintsFor( "photon" ) === true ) {
                                return false
                        }
			// Fix width and height attributes to rendered dimensions.
			img.width = img.width;
			img.height = img.height;
			// Compute new src
			if ( scale == 1 ) {
				newSrc = img.src.replace(/\?(zoom=[^&]+&)?/, '?');
			} else {
				newSrc = img.src;

				var url_var = newSrc.match( /([?&]w=)(\d+)/ );
				if ( url_var !== null && url_var[2] ) {
					newSrc = newSrc.replace( url_var[0], url_var[1] + img.width );
				}

				url_var = newSrc.match( /([?&]h=)(\d+)/ );
				if ( url_var !== null && url_var[2] ) {
					newSrc = newSrc.replace( url_var[0], url_var[1] + img.height );
				}

				var zoom_arg = '&zoom=2';
				if ( !newSrc.match( /\?/ ) ) {
					zoom_arg = '?zoom=2';
				}
				img.setAttribute( 'srcset', newSrc + zoom_arg + ' ' + scale + 'x' );
			}
		}

		// Scale static assets that have a name matching *-1x.png or *@1x.png
		else if ( img.src.match(/^https?:\/\/[^\/]+\/.*[-@]([12])x\.(gif|jpeg|jpg|png)(\?|$)/) ) {
                        if ( this.hintsFor( "staticAssets" ) === true ) {
                                return false; 
                        }
			// Fix width and height attributes to rendered dimensions.
			img.width = img.width;
			img.height = img.height;
			var currentSize = RegExp.$1, newSize = currentSize;
			if ( scale <= 1 )
				newSize = 1;
			else
				newSize = 2;
			if ( currentSize != newSize )
				newSrc = img.src.replace(/([-@])[12]x\.(gif|jpeg|jpg|png)(\?|$)/, '$1'+newSize+'x.$2$3');
		}

		else {
			return false;
		}

		// Don't set img.src unless it has changed. This avoids unnecessary reloads.
		if ( newSrc != img.src ) {
			// Store the original img.src
			var prevSrc, origSrc = img.getAttribute("src-orig");
			if ( !origSrc ) {
				origSrc = img.src;
				img.setAttribute("src-orig", origSrc);
			}
			// In case of error, revert img.src
			prevSrc = img.src;
			img.onerror = function(){
				img.src = prevSrc;
				if ( img.getAttribute("scale-fail") < scale )
					img.setAttribute("scale-fail", scale);
				img.onerror = null;
			};
			// Finally load the new image
			img.src = newSrc;
		}

		return true;
	}
};

wpcom_img_zoomer.init();
;
/* global pm, wpcom_reblog */

var jetpackLikesWidgetQueue = [];
var jetpackLikesWidgetBatch = [];
var jetpackLikesMasterReady = false;

function JetpackLikespostMessage( message, target ) {
	if ( 'string' === typeof message ){
		try {
			message = JSON.parse( message );
		} catch(e) {
			return;
		}
	}

	pm( {
		target: target,
		type: 'likesMessage',
		data: message,
		origin: '*'
	} );
}

function JetpackLikesBatchHandler() {
	var requests = [];
	jQuery( 'div.jetpack-likes-widget-unloaded' ).each( function() {
		if ( jetpackLikesWidgetBatch.indexOf( this.id ) > -1 ) {
			return;
		}
		jetpackLikesWidgetBatch.push( this.id );
		var regex = /like-(post|comment)-wrapper-(\d+)-(\d+)-(\w+)/,
			match = regex.exec( this.id ),
			info;

		if ( ! match || match.length !== 5 ) {
			return;
		}

		info = {
			blog_id: match[2],
			width:   this.width
		};

		if ( 'post' === match[1] ) {
			info.post_id = match[3];
		} else if ( 'comment' === match[1] ) {
			info.comment_id = match[3];
		}

		info.obj_id = match[4];

		requests.push( info );
	});

	if ( requests.length > 0 ) {
		JetpackLikespostMessage( { event: 'initialBatch', requests: requests }, window.frames['likes-master'] );
	}
}

function JetpackLikesMessageListener( event, message ) {
	var allowedOrigin, $container, $list, offset, rowLength, height, scrollbarWidth;

	if ( 'undefined' === typeof event.event ) {
		return;
	}

	// We only allow messages from one origin
	allowedOrigin = window.location.protocol + '//widgets.wp.com';
	if ( allowedOrigin !== message.origin ) {
		return;
	}

	if ( 'masterReady' === event.event ) {
		jQuery( document ).ready( function() {
			jetpackLikesMasterReady = true;

			var stylesData = {
					event: 'injectStyles'
				},
				$sdTextColor = jQuery( '.sd-text-color' ),
				$sdLinkColor = jQuery( '.sd-link-color' );

			if ( jQuery( 'iframe.admin-bar-likes-widget' ).length > 0 ) {
				JetpackLikespostMessage( { event: 'adminBarEnabled' }, window.frames[ 'likes-master' ] );

				stylesData.adminBarStyles = {
					background: jQuery( '#wpadminbar .quicklinks li#wp-admin-bar-wpl-like > a' ).css( 'background' ),
					isRtl: ( 'rtl' === jQuery( '#wpadminbar' ).css( 'direction' ) )
				};
			}

			// enable reblogs if we're on a single post page
			if ( jQuery( 'body' ).hasClass( 'single' ) ) {
				JetpackLikespostMessage( { event: 'reblogsEnabled' }, window.frames[ 'likes-master' ] );
			}

			if ( ! window.addEventListener ) {
				jQuery( '#wp-admin-bar-admin-bar-likes-widget' ).hide();
			}

			stylesData.textStyles = {
				color:          $sdTextColor.css( 'color' ),
				fontFamily:     $sdTextColor.css( 'font-family' ),
				fontSize:       $sdTextColor.css( 'font-size' ),
				direction:      $sdTextColor.css( 'direction' ),
				fontWeight:     $sdTextColor.css( 'font-weight' ),
				fontStyle:      $sdTextColor.css( 'font-style' ),
				textDecoration: $sdTextColor.css('text-decoration')
			};

			stylesData.linkStyles = {
				color:          $sdLinkColor.css('color'),
				fontFamily:     $sdLinkColor.css('font-family'),
				fontSize:       $sdLinkColor.css('font-size'),
				textDecoration: $sdLinkColor.css('text-decoration'),
				fontWeight:     $sdLinkColor.css( 'font-weight' ),
				fontStyle:      $sdLinkColor.css( 'font-style' )
			};

			JetpackLikespostMessage( stylesData, window.frames[ 'likes-master' ] );

			JetpackLikesBatchHandler();

			jQuery( document ).on( 'inview', 'div.jetpack-likes-widget-unloaded', function() {
				jetpackLikesWidgetQueue.push( this.id );
			});
		});
	}

	if ( 'showLikeWidget' === event.event ) {
		jQuery( '#' + event.id + ' .post-likes-widget-placeholder'  ).fadeOut( 'fast', function() {
			jQuery( '#' + event.id + ' .post-likes-widget' ).fadeIn( 'fast', function() {
				JetpackLikespostMessage( { event: 'likeWidgetDisplayed', blog_id: event.blog_id, post_id: event.post_id, obj_id: event.obj_id }, window.frames['likes-master'] );
			});
		});
	}

	if ( 'clickReblogFlair' === event.event ) {
		wpcom_reblog.toggle_reblog_box_flair( event.obj_id );
	}

	if ( 'showOtherGravatars' === event.event ) {
		$container = jQuery( '#likes-other-gravatars' );
		$list = $container.find( 'ul' );

		$container.hide();
		$list.html( '' );

		$container.find( '.likes-text span' ).text( event.total );

		jQuery.each( event.likers, function( i, liker ) {
			var element = jQuery( '<li><a><img /></a></li>' );
			element.addClass( liker.css_class );

			element.find( 'a' ).
				attr({
					href: liker.profile_URL,
					rel: 'nofollow',
					target: '_parent'
				}).
				addClass( 'wpl-liker' );

			element.find( 'img' ).
				attr({
					src: liker.avatar_URL,
					alt: liker.name
				}).
				css({
					width: '30px',
					height: '30px',
					paddingRight: '3px'
				});

			$list.append( element );
		} );

		offset = jQuery( '[name=\'' + event.parent + '\']' ).offset();

		$container.css( 'left', offset.left + event.position.left - 10 + 'px' );
		$container.css( 'top', offset.top + event.position.top - 33 + 'px' );

		rowLength = Math.floor( event.width / 37 );
		height = ( Math.ceil( event.likers.length / rowLength ) * 37 ) + 13;
		if ( height > 204 ) {
			height = 204;
		}

		$container.css( 'height', height + 'px' );
		$container.css( 'width', rowLength * 37 - 7 + 'px' );

		$list.css( 'width', rowLength * 37 + 'px' );

		$container.fadeIn( 'slow' );

		scrollbarWidth = $list[0].offsetWidth - $list[0].clientWidth;
		if ( scrollbarWidth > 0 ) {
			$container.width( $container.width() + scrollbarWidth );
			$list.width( $list.width() + scrollbarWidth );
		}
	}
}

pm.bind( 'likesMessage', JetpackLikesMessageListener );

jQuery( document ).click( function( e ) {
	var $container = jQuery( '#likes-other-gravatars' );

	if ( $container.has( e.target ).length === 0 ) {
		$container.fadeOut( 'slow' );
	}
});

function JetpackLikesWidgetQueueHandler() {
	var $wrapper, wrapperID, found;
	if ( ! jetpackLikesMasterReady ) {
		setTimeout( JetpackLikesWidgetQueueHandler, 500 );
		return;
	}

	if ( jetpackLikesWidgetQueue.length > 0 ) {
		// We may have a widget that needs creating now
		found = false;
		while( jetpackLikesWidgetQueue.length > 0 ) {
			// Grab the first member of the queue that isn't already loading.
			wrapperID = jetpackLikesWidgetQueue.splice( 0, 1 )[0];
			if ( jQuery( '#' + wrapperID ).hasClass( 'jetpack-likes-widget-unloaded' ) ) {
				found = true;
				break;
			}
		}
		if ( ! found ) {
			setTimeout( JetpackLikesWidgetQueueHandler, 500 );
			return;
		}
	} else if ( jQuery( 'div.jetpack-likes-widget-unloaded' ).length > 0 ) {
		// Grab any unloaded widgets for a batch request
		JetpackLikesBatchHandler();

		// Get the next unloaded widget
		wrapperID = jQuery( 'div.jetpack-likes-widget-unloaded' ).first()[0].id;
		if ( ! wrapperID ) {
			// Everything is currently loaded
			setTimeout( JetpackLikesWidgetQueueHandler, 500 );
			return;
		}
	}

	if ( 'undefined' === typeof wrapperID ) {
		setTimeout( JetpackLikesWidgetQueueHandler, 500 );
		return;
	}

	$wrapper = jQuery( '#' + wrapperID );
	$wrapper.find( 'iframe' ).remove();

	if ( $wrapper.hasClass( 'slim-likes-widget' ) ) {
		$wrapper.find( '.post-likes-widget-placeholder' ).after( '<iframe class="post-likes-widget jetpack-likes-widget" name="' + $wrapper.data( 'name' ) + '" height="22px" width="68px" frameBorder="0" scrolling="no" src="' + $wrapper.data( 'src' ) + '"></iframe>' );
	} else {
		$wrapper.find( '.post-likes-widget-placeholder' ).after( '<iframe class="post-likes-widget jetpack-likes-widget" name="' + $wrapper.data( 'name' ) + '" height="55px" width="100%" frameBorder="0" src="' + $wrapper.data( 'src' ) + '"></iframe>' );
	}

	$wrapper.removeClass( 'jetpack-likes-widget-unloaded' ).addClass( 'jetpack-likes-widget-loading' );

	$wrapper.find( 'iframe' ).load( function( e ) {
		var $iframe = jQuery( e.target );
		$wrapper.removeClass( 'jetpack-likes-widget-loading' ).addClass( 'jetpack-likes-widget-loaded' );

		JetpackLikespostMessage( { event: 'loadLikeWidget', name: $iframe.attr( 'name' ), width: $iframe.width(), domain: window.location.hostname }, window.frames[ 'likes-master' ] );

		if ( $wrapper.hasClass( 'slim-likes-widget' ) ) {
			$wrapper.find( 'iframe' ).Jetpack( 'resizeable' );
		}
	});
	setTimeout( JetpackLikesWidgetQueueHandler, 250 );
}
JetpackLikesWidgetQueueHandler();
;
jQuery(function(){"use strict";var e=jQuery;e("#pagina-inicial").click(function(){e(".box-inicial").removeClass("active"),e(".box-funciona").addClass("active"),e(".box-depoimentos").addClass("active"),e(".box-contato").addClass("active"),e(".box-edicoes").addClass("active")}),e("#como-funciona").click(function(){e(".box-inicial").addClass("active"),e(".box-funciona").removeClass("active"),e(".box-depoimentos").addClass("active"),e(".box-contato").addClass("active"),e(".box-edicoes").addClass("active")}),e("#edicoes").click(function(){e(".box-inicial").addClass("active"),e(".box-edicoes").removeClass("active"),e(".box-funciona").addClass("active"),e(".box-depoimentos").addClass("active"),e(".box-contato").addClass("active")}),e("#depoimentos").click(function(){e(".box-inicial").addClass("active"),e(".box-depoimentos").removeClass("active"),e(".box-funciona").addClass("active"),e(".box-contato").addClass("active"),e(".box-edicoes").addClass("active")}),e("#contato").click(function(){e(".box-inicial").addClass("active"),e(".box-contato").removeClass("active"),e(".box-funciona").addClass("active"),e(".box-depoimentos").addClass("active"),e(".box-edicoes").addClass("active")})}),jQuery(".container-image-video-curso").on("click",function(){var e,a,o,i=$(this).attr("data-video-type").toLowerCase(),t=$(this).attr("data-video-id"),n=$(this).attr("data-brand-videos"),c=760,s=317,d=$(this);if(a=d.width(),o=a*s/c,a=c*o/s,o=Math.floor(o),a=Math.floor(a),d.addClass("playing").css("min-height",o+"px"),"youtube"===i){var r="https://www.youtube.com/embed/"+encodeURIComponent(t)+"?rel=0&amp;showinfo=0&autoplay=true";e=$("<iframe />",{width:a,height:o,src:r,frameborder:"0",allowfullscreen:"true"})}else if("sambatech"===i){var r="http://videos.abril.com.br/"+encodeURIComponent(n)+"/id/"+encodeURIComponent(t)+"?w="+encodeURIComponent(a)+"&h="+encodeURIComponent(o)+"&autoplay=true&startoutput=720p";e=$("<iframe />",{width:a,height:o,src:r,frameborder:"0",allowfullscreen:"true"})}else if("dailymotion"===i){var r="//www.dailymotion.com/embed/video/"+encodeURIComponent(t)+"?autoPlay=1";e=$("<iframe />",{width:a,height:o,src:r,frameborder:"0",allowfullscreen:"true"})}else if("vimeo"===i){var r="https://player.vimeo.com/video/"+encodeURIComponent(t)+"?autoplay=1&title=0&byline=0&portrait=0";e=$("<iframe />",{width:a,height:o,src:r,frameborder:"0",allowfullscreen:"true",id:"cursoenem-vimeo"})}d.children().remove(),d.append(e)}),jQuery("#menu-mobile").change(function(){this.value&&(window.location.href=this.value)}),jQuery(document).ready(function(e){if(e("#menu-cursos").length>0){var a=window.location.href;e("#menu-cursos ul li").each(function(){a===jQuery(this).find("a").attr("href")&&jQuery(this).addClass("active")})}jQuery(".popup-youtube").magnificPopup({type:"iframe",mainClass:"mfp-fade",removalDelay:160,preloader:!1,fixedContentPos:!0}),jQuery(".simulador-financeiro .guia a").click(function(e){e.preventDefault(),jQuery(".simulador-financeiro .guia a").removeClass("selecionado"),jQuery(".simulador-financeiro .caixa").hide(),jQuery(this).addClass("selecionado"),jQuery(".simulador-financeiro .caixa").eq(jQuery(this).index()).fadeIn()})});;
